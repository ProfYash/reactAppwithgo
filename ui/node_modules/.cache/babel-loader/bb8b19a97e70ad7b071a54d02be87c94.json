{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91989\\\\Desktop\\\\Swabhav\\\\reactAppwithgo\\\\ui\\\\src\\\\DisplayUserAddress.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [loginStatus, updateloginStatus] = useState('');\n  const [address, updateaddress] = useState({});\n  const [RollNo, updateRollNo] = useState(''); // creating a hook for updates\n\n  const loadusers = async () => {\n    const resp = await axios.get(`http://localhost:4002/api/v1/blog/addaddress/${RollNo}`).catch(e => {\n      console.log(e.message);\n\n      if (e.response.status == 401) {\n        updateloginStatus('Unauthorized');\n        return;\n      }\n    });\n\n    if (resp != null) {\n      console.log(\"data: \", resp.data);\n      updateaddress(resp.data);\n    }\n  };\n\n  function handlemyDisplay() {\n    loadusers();\n  } // useEffect(() => {\n  //     loadusers();\n  // },[])//useeffect for call method at time of load and only once\n  //creating dynmic number of cards\n\n\n  const cardofuser = Object.values(address).map(a => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        width: \"30%\",\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [\"First Line:\\xA0\\xA0\\xA0\", a.firstlineadd, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 50\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 56\n        }, this), \"City:\\xA0\\xA0\\xA0\", a.city, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 42\n        }, this), \"Pincode:\\xA0\\xA0\\xA0\", a.pincode, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 48\n        }, this)]\n      }, a.addid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  }); // if (users!={}){\n\n  return (\n    /*#__PURE__*/\n    // <div><h1>Display</h1></div> //do this initially\n    _jsxDEV(\"div\", {\n      className: \"d-flex felx-row flex-wrap justify-content-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlemyDisplay,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-group\",\n            children: \"Roll Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 9\n          }, this), \"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: RollNo,\n            onChange: e => updateRollNo(e.target.value),\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 114\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 120\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          children: \"Display Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: loginStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 28\n      }, this), cardofuser]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }, this)\n  );\n}, \"qQ3QS3Z+3UMbAF7guzhusOoGbks=\");","map":{"version":3,"sources":["C:/Users/91989/Desktop/Swabhav/reactAppwithgo/ui/src/DisplayUserAddress.js"],"names":["React","useState","useEffect","axios","loginStatus","updateloginStatus","address","updateaddress","RollNo","updateRollNo","loadusers","resp","get","catch","e","console","log","message","response","status","data","handlemyDisplay","cardofuser","Object","values","map","a","width","marginBottom","firstlineadd","city","pincode","addid","target","value"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nexport default () => {\r\nconst [loginStatus,updateloginStatus]=useState('')\r\n    const [address,updateaddress] = useState({})\r\n    const [RollNo,updateRollNo] = useState('') // creating a hook for updates\r\nconst loadusers = async ()=>{\r\n   const resp = await axios.get(`http://localhost:4002/api/v1/blog/addaddress/${RollNo}`).catch(e=>{\r\n       console.log(e.message)\r\n       if (e.response.status==401){\r\n        updateloginStatus('Unauthorized')        \r\n        return\r\n    } \r\n\r\n})\r\n\r\nif( resp!=null){\r\n   console.log(\"data: \",resp.data)\r\n   updateaddress(resp.data)\r\n}\r\n}\r\n\r\nfunction handlemyDisplay(){\r\n    loadusers();\r\n}\r\n// useEffect(() => {\r\n//     loadusers();\r\n// },[])//useeffect for call method at time of load and only once\r\n\r\n//creating dynmic number of cards\r\nconst cardofuser = Object.values(address).map(a=>{\r\n    return (\r\n        <div className=\"card\" style={{ width:\"30%\", marginBottom:\"20px\"}}>\r\n\r\n<div className=\"card-body\" key={a.addid}>\r\n{/* ID:&nbsp;&nbsp;&nbsp;{u.UID}<br /><br /> */}\r\n    First Line:&nbsp;&nbsp;&nbsp;{a.firstlineadd}<br /><br />\r\n    City:&nbsp;&nbsp;&nbsp;{a.city}<br /><br />\r\n    Pincode:&nbsp;&nbsp;&nbsp;{a.pincode}<br /><br />\r\n{/* hello world */}\r\n</div>\r\n        </div>\r\n    )\r\n})\r\n// if (users!={}){\r\n    return(\r\n        // <div><h1>Display</h1></div> //do this initially\r\n         <div className=\"d-flex felx-row flex-wrap justify-content-between\">\r\n         <form onSubmit={handlemyDisplay}>\r\n          <div>\r\n        <label className=\"form-group\">Roll Number</label>&nbsp;&nbsp;&nbsp;&nbsp;\r\n        <input type=\"text\" value={RollNo} onChange={(e)=>updateRollNo(e.target.value)} className=\"form-control\"/><br /><br />   \r\n     </div>\r\n     <button className=\"btn btn-primary\">Display Address</button>\r\n     </form>\r\n     <h1>{loginStatus}</h1><br />\r\n     {cardofuser}\r\n         </div> \r\n         )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}